C51 COMPILER V9.00   WXJ                                                                   09/21/2014 14:16:37 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE WXJ
OBJECT MODULE PLACED IN WXJ.OBJ
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE WXJ.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h> //包含头文件，一般情况不需要改动，头文件包含特殊功能寄存器的定义
   2          #include<intrins.h>
   3          
   4          sbit RS = P3^5;   //定义端口 
   5          sbit RW = P3^6;
   6          sbit EN = P3^7;
   7          sbit CU = P2^6;
   8          sbit MP = P2^7;
   9          sbit HB = P3^3;
  10          sbit HL = P3^4;
  11          
  12          #define RS_CLR RS=0 
  13          #define RS_SET RS=1
  14          
  15          #define RW_CLR RW=0 
  16          #define RW_SET RW=1 
  17          
  18          #define EN_CLR EN=0
  19          #define EN_SET EN=1
  20          
  21          #define DataPort P1
  22          #define MotorPort P2
  23          
  24          /*------------------------------------------------
  25           uS延时函数，含有输入参数 unsigned char t，无返回值
  26           unsigned char 是定义无符号字符变量，其值的范围是
  27           0~255 这里使用晶振12M，精确延时请使用汇编,大致延时
  28           长度如下 T=tx2+5 uS 
  29          ------------------------------------------------*/
  30          void DelayUs2x(unsigned char t)
  31          {   
  32   1       while(--t);
  33   1      }
  34          /*------------------------------------------------
  35           mS延时函数，含有输入参数 unsigned char t，无返回值
  36           unsigned char 是定义无符号字符变量，其值的范围是
  37           0~255 这里使用晶振12M，精确延时请使用汇编
  38          ------------------------------------------------*/
  39          void DelayMs(unsigned int t)
  40          {
  41   1           
  42   1       while(t--)
  43   1       {
  44   2           //大致延时1mS
  45   2           DelayUs2x(245);
  46   2               DelayUs2x(245);
  47   2       }
  48   1      }
  49          /*------------------------------------------------
  50                        判忙函数
  51          ------------------------------------------------*/
  52           bit LCD_Check_Busy(void) 
  53           { 
  54   1       DataPort= 0xFF; 
  55   1       RS_CLR; 
C51 COMPILER V9.00   WXJ                                                                   09/21/2014 14:16:37 PAGE 2   

  56   1       RW_SET; 
  57   1       EN_CLR; 
  58   1       _nop_(); 
  59   1       EN_SET;
  60   1       return (bit)(DataPort & 0x80);
  61   1       }
  62          /*------------------------------------------------
  63                        写入命令函数
  64          ------------------------------------------------*/
  65           void LCD_Write_Com(unsigned char com) 
  66           {  
  67   1       while(LCD_Check_Busy()); //忙则等待
  68   1       RS_CLR; 
  69   1       RW_CLR; 
  70   1       EN_SET; 
  71   1       DataPort= com; 
  72   1       _nop_(); 
  73   1       EN_CLR;
  74   1       }
  75          /*------------------------------------------------
  76                        写入数据函数
  77          ------------------------------------------------*/
  78           void LCD_Write_Data(unsigned char Data) 
  79           { 
  80   1       while(LCD_Check_Busy()); //忙则等待
  81   1       RS_SET; 
  82   1       RW_CLR; 
  83   1       EN_SET; 
  84   1       DataPort= Data; 
  85   1       _nop_();
  86   1       EN_CLR;
  87   1       }
  88          
  89          /*------------------------------------------------
  90                          清屏函数
  91          ------------------------------------------------*/
  92           void LCD_Clear(void) 
  93           { 
  94   1       LCD_Write_Com(0x01); 
  95   1       DelayMs(5);
  96   1       }
  97          /*------------------------------------------------
  98                        写入字符串函数
  99          ------------------------------------------------*/
 100           void LCD_Write_String(unsigned char x,unsigned char y,unsigned char *s) 
 101           {     
 102   1       if (y == 0) 
 103   1              {     
 104   2               LCD_Write_Com(0x80 + x);     //表示第一行
 105   2              }
 106   1       else 
 107   1              {      
 108   2              LCD_Write_Com(0xC0 + x);      //表示第二行
 109   2              }        
 110   1       while (*s) 
 111   1              {     
 112   2       LCD_Write_Data( *s);     
 113   2       s ++;     
 114   2              }
 115   1       }
 116          /*------------------------------------------------
 117                        写入字符函数
C51 COMPILER V9.00   WXJ                                                                   09/21/2014 14:16:37 PAGE 3   

 118          ------------------------------------------------*/
 119           void LCD_Write_Char(unsigned char x,unsigned char y,unsigned char Data) 
 120           {     
 121   1       if (y == 0) 
 122   1              {     
 123   2              LCD_Write_Com(0x80 + x);     
 124   2              }    
 125   1       else 
 126   1              {     
 127   2              LCD_Write_Com(0xC0 + x);     
 128   2              }        
 129   1       LCD_Write_Data( Data);  
 130   1       }
 131          /*------------------------------------------------
 132                        写入字符函数
 133          ------------------------------------------------*/
 134          void LCD_WriteNumber(unsigned char x,unsigned char y,unsigned int i)
 135          {
 136   1              unsigned char Data[]={'0','1','2','3','4','5','6','7','8','9'};
 137   1              LCD_Write_Char(x,y,Data[i/10000]);
 138   1              LCD_Write_Char(x+1,y,Data[i%10000/1000]);       
 139   1              LCD_Write_Char(x+2,y,Data[i%1000/100]);
 140   1              LCD_Write_Char(x+3,y,Data[i%100/10]);
 141   1              LCD_Write_Char(x+4,y,Data[i%10]);
 142   1      }
 143          
 144          /*------------------------------------------------
 145                        初始化函数
 146          ------------------------------------------------*/
 147           void LCD_Init(void) 
 148           {
 149   1         LCD_Write_Com(0x38);    /*显示模式设置*/ 
 150   1         DelayMs(5); 
 151   1         LCD_Write_Com(0x38); 
 152   1         DelayMs(5); 
 153   1         LCD_Write_Com(0x38); 
 154   1         DelayMs(5); 
 155   1         LCD_Write_Com(0x38);  
 156   1         LCD_Write_Com(0x08);    /*显示关闭*/ 
 157   1         LCD_Write_Com(0x01);    /*显示清屏*/ 
 158   1         LCD_Write_Com(0x06);    /*显示光标移动设置*/ 
 159   1         DelayMs(5); 
 160   1         LCD_Write_Com(0x0C);    /*显示开及光标设置*/
 161   1         }
 162          
 163          /*------------------------------------------------
 164                        串口发送
 165          ------------------------------------------------*/
 166          void SendOneByte(unsigned char c)
 167          {
 168   1          SBUF = c;
 169   1          while(!TI);
 170   1          TI = 0;
 171   1      }
 172          /*------------------------------------------------
 173                        串口初始化
 174          ------------------------------------------------*/
 175          void InitUART(void)
 176          {
 177   1          TMOD = 0x20;
 178   1          SCON = 0x50;
 179   1          TH1 = 0xFD;
C51 COMPILER V9.00   WXJ                                                                   09/21/2014 14:16:37 PAGE 4   

 180   1          TL1 = TH1;
 181   1          PCON = 0x00;
 182   1          EA = 1;
 183   1          ES = 1;
 184   1          TR1 = 1;
 185   1      }
 186          /*------------------------------------------------
 187                        写入命令函数
 188          ------------------------------------------------*/
 189          void  Motor_Select(int mt)
 190          {
 191   1              if(mt < 64)
 192   1              {
 193   2                      MotorPort = mt;
 194   2                      MP = 1;
 195   2                      CU = 1;
 196   2              }
 197   1      }
 198           
 199            
 200          /*------------------------------------------------
 201                              主函数
 202          ------------------------------------------------*/ 
 203          void main(void) 
 204          { 
 205   1      DataPort = 0x00;
 206   1      HB = 0;
 207   1      HL = 0;
 208   1      InitUART(); 
 209   1      //LCD_Init();
 210   1      //LCD_Clear();//清屏 
 211   1      // LCD_Write_String(0,0,"Auto Parts Box");
 212   1      // LCD_Write_String(0,1,"ZHHASO develop");
 213   1        while(1)
 214   1        {
 215   2          if(!CU)
 216   2          {
 217   3              DelayMs(400);
 218   3                      if(!CU)
 219   3                      {
 220   4                              HB = 0;
 221   4                              HL = 0;
 222   4                      }
 223   3              
 224   3         }
 225   2        }
 226   1      }
 227          
 228          /*------------------------------------------------
 229                        串口中断
 230          ------------------------------------------------*/ 
 231           
 232           void UARTInterrupt(void) interrupt 4
 233          {
 234   1              unsigned char Data1;
 235   1              unsigned char Data2;
 236   1              unsigned char Data3;
 237   1              unsigned char Data4;
 238   1              unsigned int t;
 239   1              bit OK = 0;
 240   1          if(RI)
 241   1          {
C51 COMPILER V9.00   WXJ                                                                   09/21/2014 14:16:37 PAGE 5   

 242   2                  RI = 0;     
 243   2                      if(SBUF == 'K')
 244   2                      {
 245   3                              SendOneByte('K');
 246   3                      //      LCD_Clear();
 247   3                      //      LCD_Write_String(0,0,"Connect success");
 248   3                              OK = 1;
 249   3                      }
 250   2                      Data1 = SBUF;
 251   2                      t = 5000;
 252   2                      while(!RI&&!OK&&t--);
 253   2                      RI = 0;
 254   2                      Data2 = SBUF;
 255   2                      t = 5000;
 256   2                      while(!RI&&!OK&&t--);
 257   2                      RI = 0;
 258   2                      Data3 = SBUF;
 259   2                      t = 5000;
 260   2                      while(!RI&&!OK&&t--);
 261   2                      RI = 0;
 262   2                      Data4 = SBUF;
 263   2                      if(Data1 == 0x7f)
 264   2                      {
 265   3                              if(MP)
 266   3                              {
 267   4                                      SendOneByte(0xf3);
 268   4                              //      LCD_Clear();
 269   4                              //      LCD_Write_String(0,0,"No Motor Power");
 270   4                              }
 271   3                              else
 272   3                              {
 273   4                          SendOneByte(0xf4);
 274   4                              if(Data2 == 0x80)
 275   4                                      {
 276   5                                      //      LCD_Clear();
 277   5                                      //      LCD_Write_String(0,0,"Eject Location:");
 278   5                                      //      LCD_WriteNumber(0,1,(Data3 * 256) + Data4);
 279   5                                              Motor_Select((Data3 * 256) + Data4);
 280   5                                              HL = 0;
 281   5                                              HB = 0;
 282   5                                              DelayMs(200);
 283   5                                              HL = 1;
 284   5                                              HB = 0;
 285   5                                      }
 286   4                              else if(Data2 == 0x81)
 287   4                                      {
 288   5                                      //      LCD_Clear();
 289   5                                      //      LCD_Write_String(0,0,"Back Location:");
 290   5                                      //      LCD_WriteNumber(0,1,(Data3 * 256) + Data4);
 291   5                                              Motor_Select((Data3 * 256) + Data4);
 292   5                                              HL = 0;
 293   5                                              HB = 0;
 294   5                                              DelayMs(200);
 295   5                                              HB = 1;
 296   5                                              HL = 0;
 297   5                                      }
 298   4                              }
 299   3                      } 
 300   2          }
 301   1          else
 302   1              TI = 0;
 303   1      }
C51 COMPILER V9.00   WXJ                                                                   09/21/2014 14:16:37 PAGE 6   

 304          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    698    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
